# -*- coding: utf-8 -*-
"""Copy of TASK-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CURoY5PtF4FSryBQbjs9ltK-pemkNnZ0

Task1 IRIS FLOWER CLASSIFICATION

1. LOADING OF DATA
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,confusion_matrix

df=pd.read_csv('iris.csv')
df.head()

df.tail()

df.describe()

df.info()

# checking for null
df.isnull().sum()

df['Species'].value_counts()

x=df.iloc[:,:4]
y=df.iloc[:,4]
x
y

Sax=plt.subplots(1,1,figsize=(6,4))
df['Species'].value_counts().plot.pie(autopct='%1.1f%%')
plt.show()

x=df['SepalLengthCm']
y=df['SepalWidthCm']
plt.xlabel("sepal Length")
plt.ylabel("sepal Width")

sns.set(font_scale=1.6,rc={'figure.figsize':(6,4)})
sns.boxplot(x="Species",y="SepalLengthCm",data=df)

x=df.drop("Species",axis=1)
y=df["Species"]

#finding algorithm
from sklearn.preprocessing import StandardScaler

x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.7,random_state=1)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

ss=StandardScaler()
x_train=ss.fit_transform(x_train)
x_test=ss.fit_transform(x_test)

from sklearn.svm import SVC
from sklearn.metrics import classification_report 
from sklearn.metrics import accuracy_score
model=SVC()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

y_pred

print("confusion matrix")
confusion_matrix(y_test,y_pred)

print("classification_report")
print(classification_report(y_test,y_pred))